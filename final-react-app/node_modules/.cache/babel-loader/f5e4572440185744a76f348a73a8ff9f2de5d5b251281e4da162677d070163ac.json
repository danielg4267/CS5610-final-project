{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\ALIGN MSCS Files\\\\CS 5610 - Web Development\\\\spring23\\\\final-project\\\\final-react-app\\\\src\\\\search\\\\result-detailed.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { getDetailsByID } from \"../services/openlib-services\";\nimport { profile } from \"../services/users-services\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COVER_SOURCE = \"https://covers.openlibrary.org/b/id\";\nconst ResultDetailed = () => {\n  _s();\n  const {\n    key\n  } = useParams();\n  const [details, setDetails] = useState({});\n  const fetchDetails = async () => {\n    const response = await getDetailsByID(key);\n    setDetails(response);\n  };\n  useEffect(() => {\n    fetchDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), work.covers ? work.covers.map(cover => cover) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 62\n    }, this), JSON.stringify(details)]\n  }, void 0, true);\n};\n_s(ResultDetailed, \"N3qaB6LtxzDXIlV3zm9jMBUpU44=\", false, function () {\n  return [useParams];\n});\n_c = ResultDetailed;\nexport default ResultDetailed;\nvar _c;\n$RefreshReg$(_c, \"ResultDetailed\");","map":{"version":3,"names":["useParams","getDetailsByID","profile","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","COVER_SOURCE","ResultDetailed","_s","key","details","setDetails","fetchDetails","response","children","fileName","_jsxFileName","lineNumber","columnNumber","work","covers","map","cover","src","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/ALIGN MSCS Files/CS 5610 - Web Development/spring23/final-project/final-react-app/src/search/result-detailed.js"],"sourcesContent":["import {useParams} from \"react-router-dom\";\r\nimport {getDetailsByID} from \"../services/openlib-services\";\r\nimport {profile} from \"../services/users-services\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst COVER_SOURCE = \"https://covers.openlibrary.org/b/id\"\r\n\r\nconst ResultDetailed = () => {\r\n    const {key} = useParams();\r\n\r\n    const [details, setDetails] = useState({});\r\n    const fetchDetails = async () => {\r\n        const response = await getDetailsByID(key);\r\n        setDetails(response);\r\n    }\r\n    useEffect(() => {\r\n        fetchDetails();\r\n    }, []);\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h4>Details</h4>\r\n            {work.covers ? work.covers.map(cover => cover) : <img src=\"none\"/>}\r\n            {JSON.stringify(details)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResultDetailed;"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,cAAc,QAAO,8BAA8B;AAC3D,SAAQC,OAAO,QAAO,4BAA4B;AAClD,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,YAAY,GAAG,qCAAqC;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAACC;EAAG,CAAC,GAAGb,SAAS,EAAE;EAEzB,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMhB,cAAc,CAACY,GAAG,CAAC;IAC1CE,UAAU,CAACE,QAAQ,CAAC;EACxB,CAAC;EACDb,SAAS,CAAC,MAAM;IACZY,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAIN,oBACIT,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACfC,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAAC,gBAAGnB,OAAA;MAAKoB,GAAG,EAAC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EACjEM,IAAI,CAACC,SAAS,CAACf,OAAO,CAAC;EAAA,gBAEzB;AAEX,CAAC;AAAAF,EAAA,CAtBKD,cAAc;EAAA,QACFX,SAAS;AAAA;AAAA8B,EAAA,GADrBnB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}