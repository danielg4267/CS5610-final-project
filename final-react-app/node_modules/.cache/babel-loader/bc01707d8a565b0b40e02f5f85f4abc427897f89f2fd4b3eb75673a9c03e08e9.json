{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\ALIGN MSCS Files\\\\CS 5610 - Web Development\\\\spring23\\\\final-project\\\\final-react-app\\\\src\\\\search\\\\index.js\",\n  _s = $RefreshSig$();\n//https://openlibrary.org/search.json?q=harry%20potter&fields=subject\n//https://covers.openlibrary.org/b/id/10521270-L.jpg\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { searchByTitle } from \"../services/openlib-services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COVER_SOURCE = \"https://covers.openlibrary.org/b/id\";\nconst Search = () => {\n  _s();\n  const {\n    search\n  } = useParams();\n  const [results, setResults] = useState([]);\n  const fetchResults = async () => {\n    const response = await searchByTitle(search);\n    setResults(response);\n  };\n  useEffect(() => {\n    fetchResults();\n  }, [search]);\n  const no_cover = \"https://openlibrary.org/images/icons/avatar_book.png\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Search \\\"\", search, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), results && results.map(work => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: work.cover_i ? `${COVER_SOURCE}/${work.cover_i}.jpg` : no_cover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(Search, \"yHMIPV8gRy3CdoosP5HVVptQS0I=\", false, function () {\n  return [useParams];\n});\n_c = Search;\nexport default Search;\n\n/*\r\n\r\nresults &&\r\n                    results.map((work) =>{\r\n                        return(<div>\r\n                                    <img src={work.cover_i ? `${COVER_SOURCE}/${work.cover_i}` : no_cover}/>\r\n                        </div>)\r\n                    })\r\n */\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useParams","React","useEffect","useState","searchByTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","COVER_SOURCE","Search","_s","search","results","setResults","fetchResults","response","no_cover","children","fileName","_jsxFileName","lineNumber","columnNumber","map","work","src","cover_i","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/ALIGN MSCS Files/CS 5610 - Web Development/spring23/final-project/final-react-app/src/search/index.js"],"sourcesContent":["//https://openlibrary.org/search.json?q=harry%20potter&fields=subject\r\n//https://covers.openlibrary.org/b/id/10521270-L.jpg\r\n\r\nimport {useParams} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {searchByTitle} from \"../services/openlib-services\";\r\n\r\nconst COVER_SOURCE = \"https://covers.openlibrary.org/b/id\"\r\n\r\nconst Search = () => {\r\n    const {search} = useParams();\r\n    const [results, setResults] = useState([]);\r\n    const fetchResults = async () => {\r\n        const response = await searchByTitle(search);\r\n        setResults(response);\r\n    }\r\n    useEffect(() => {\r\n        fetchResults();\r\n    }, [search]);\r\n    const no_cover = \"https://openlibrary.org/images/icons/avatar_book.png\"\r\n    return (\r\n        <>\r\n            <h4>Search \"{search}\"</h4>\r\n            {\r\n                results &&\r\n                results.map((work) =>{\r\n                    return(<div>\r\n                        <img src={work.cover_i ? `${COVER_SOURCE}/${work.cover_i}.jpg` : no_cover}/>\r\n                    </div>)\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n\r\n/*\r\n\r\nresults &&\r\n                    results.map((work) =>{\r\n                        return(<div>\r\n                                    <img src={work.cover_i ? `${COVER_SOURCE}/${work.cover_i}` : no_cover}/>\r\n                        </div>)\r\n                    })\r\n */"],"mappings":";;AAAA;AACA;;AAEA,SAAQA,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,aAAa,QAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,YAAY,GAAG,qCAAqC;AAE1D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAACC;EAAM,CAAC,GAAGZ,SAAS,EAAE;EAC5B,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMZ,aAAa,CAACQ,MAAM,CAAC;IAC5CE,UAAU,CAACE,QAAQ,CAAC;EACxB,CAAC;EACDd,SAAS,CAAC,MAAM;IACZa,YAAY,EAAE;EAClB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EACZ,MAAMK,QAAQ,GAAG,sDAAsD;EACvE,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA;MAAAY,QAAA,GAAI,WAAQ,EAACN,MAAM,EAAC,IAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEtBT,OAAO,IACPA,OAAO,CAACU,GAAG,CAAEC,IAAI,IAAI;MACjB,oBAAOlB,OAAA;QAAAY,QAAA,eACHZ,OAAA;UAAKmB,GAAG,EAAED,IAAI,CAACE,OAAO,GAAI,GAAEjB,YAAa,IAAGe,IAAI,CAACE,OAAQ,MAAK,GAAGT;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1E;IACV,CAAC,CAAC;EAAA,gBAEP;AAEX,CAAC;AAAAX,EAAA,CAxBKD,MAAM;EAAA,QACSV,SAAS;AAAA;AAAA2B,EAAA,GADxBjB,MAAM;AA0BZ,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}