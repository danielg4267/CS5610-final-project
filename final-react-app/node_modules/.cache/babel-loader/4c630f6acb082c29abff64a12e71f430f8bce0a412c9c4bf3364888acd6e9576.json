{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as service from \"./users-services.js\";\nexport const loginThunk = createAsyncThunk(\"user/login\", async credentials => {\n  const user = await service.login(credentials);\n  return user;\n});\nexport const logoutThunk = createAsyncThunk(\"user/logout\", async () => {\n  const response = await service.logout();\n});\nexport const registerThunk = createAsyncThunk(\"user/register\", async credentials => {\n  const user = await service.register(credentials);\n  return user;\n});\nexport const findUserByIDThunk = createAsyncThunk(\"user/findUser\", async uid => {\n  const user = await service.findUserByID(uid);\n  return user;\n});\nexport const profileThunk = createAsyncThunk(\"user/profile\", async () => {\n  const user = await service.profile();\n  return user;\n});","map":{"version":3,"names":["createAsyncThunk","service","loginThunk","credentials","user","login","logoutThunk","response","logout","registerThunk","register","findUserByIDThunk","uid","findUserByID","profileThunk","profile"],"sources":["C:/Users/danie/Desktop/ALIGN MSCS Files/CS 5610 - Web Development/spring23/final-project/final-react-app/src/services/users-thunks.js"],"sourcesContent":["import {createAsyncThunk}\r\n    from \"@reduxjs/toolkit\"\r\nimport * as service\r\n    from \"./users-services.js\"\r\n\r\nexport const loginThunk = createAsyncThunk(\r\n    \"user/login\", async (credentials) => {\r\n        const user = await service.login(credentials);\r\n        return user;\r\n    }\r\n);\r\n\r\nexport const logoutThunk = createAsyncThunk(\r\n    \"user/logout\", async () => {\r\n\r\n        const response = await service.logout();\r\n    }\r\n);\r\n\r\nexport const registerThunk = createAsyncThunk(\r\n    \"user/register\", async (credentials) => {\r\n        const user = await service.register(credentials);\r\n        return user;\r\n    }\r\n);\r\n\r\nexport const findUserByIDThunk = createAsyncThunk(\r\n    \"user/findUser\", async (uid) => {\r\n        const user = await service.findUserByID(uid);\r\n        return user;\r\n    }\r\n);\r\n\r\nexport const profileThunk = createAsyncThunk(\r\n    \"user/profile\", async () => {\r\n        const user = await service.profile();\r\n        return user;\r\n    }\r\n);\r\n"],"mappings":"AAAA,SAAQA,gBAAgB,QACf,kBAAkB;AAC3B,OAAO,KAAKC,OAAO,MACV,qBAAqB;AAE9B,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CACtC,YAAY,EAAE,MAAOG,WAAW,IAAK;EACjC,MAAMC,IAAI,GAAG,MAAMH,OAAO,CAACI,KAAK,CAACF,WAAW,CAAC;EAC7C,OAAOC,IAAI;AACf,CAAC,CACJ;AAED,OAAO,MAAME,WAAW,GAAGN,gBAAgB,CACvC,aAAa,EAAE,YAAY;EAEvB,MAAMO,QAAQ,GAAG,MAAMN,OAAO,CAACO,MAAM,EAAE;AAC3C,CAAC,CACJ;AAED,OAAO,MAAMC,aAAa,GAAGT,gBAAgB,CACzC,eAAe,EAAE,MAAOG,WAAW,IAAK;EACpC,MAAMC,IAAI,GAAG,MAAMH,OAAO,CAACS,QAAQ,CAACP,WAAW,CAAC;EAChD,OAAOC,IAAI;AACf,CAAC,CACJ;AAED,OAAO,MAAMO,iBAAiB,GAAGX,gBAAgB,CAC7C,eAAe,EAAE,MAAOY,GAAG,IAAK;EAC5B,MAAMR,IAAI,GAAG,MAAMH,OAAO,CAACY,YAAY,CAACD,GAAG,CAAC;EAC5C,OAAOR,IAAI;AACf,CAAC,CACJ;AAED,OAAO,MAAMU,YAAY,GAAGd,gBAAgB,CACxC,cAAc,EAAE,YAAY;EACxB,MAAMI,IAAI,GAAG,MAAMH,OAAO,CAACc,OAAO,EAAE;EACpC,OAAOX,IAAI;AACf,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}